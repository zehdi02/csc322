{"ast":null,"code":"var _jsxFileName = \"/home/zed/repos/csc322/src/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBox() {\n  _s();\n  const [chatWindowDisplay, setChatWindowDisplay] = useState(false);\n  const [messages, setMessages] = useState([{\n    sender: 'Bot',\n    message: 'Hello! How may I help you?'\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const toggleChatWindowDisplay = () => {\n    setChatWindowDisplay(!chatWindowDisplay);\n  };\n  const handleUserInput = event => {\n    setUserInput(event.target.value);\n  };\n  const handleSendMessage = () => {\n    // Send message\n    setMessages([...messages, {\n      sender: 'You',\n      message: userInput\n    }]);\n    setUserInput('');\n  };\n  const handleKeyDown = event => {\n    // Send message if Enter key is pressed\n    if (event.keyCode === 13) {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-icon\",\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"img/chat_employee.png\",\n        alt: \"Chat Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), chatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-window\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'Bot' ? 'received' : 'sent'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"chat-input\",\n          placeholder: \"Ask a question...\",\n          value: userInput,\n          onChange: handleUserInput,\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"chat-send-button\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"YMJXPY9qAlq7xLs3hPSfj2hbGr8=\");\n_c = ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBox","_s","chatWindowDisplay","setChatWindowDisplay","messages","setMessages","sender","message","userInput","setUserInput","toggleChatWindowDisplay","handleUserInput","event","target","value","handleSendMessage","handleKeyDown","keyCode","id","children","onClick","toggleChat","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","chatOpen","map","index","className","type","placeholder","onChange","onKeyDown","sendMessage","_c","$RefreshReg$"],"sources":["/home/zed/repos/csc322/src/ChatBox.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function ChatBox() {\n    const [chatWindowDisplay, setChatWindowDisplay] = useState(false);\n    const [messages, setMessages] = useState([\n      { sender: 'Bot', message: 'Hello! How may I help you?' }\n    ]);\n    const [userInput, setUserInput] = useState('');\n  \n    const toggleChatWindowDisplay = () => {\n      setChatWindowDisplay(!chatWindowDisplay);\n    };\n  \n    const handleUserInput = (event) => {\n      setUserInput(event.target.value);\n    };\n  \n    const handleSendMessage = () => {\n      // Send message\n      setMessages([...messages, { sender: 'You', message: userInput }]);\n      setUserInput('');\n    };\n  \n    const handleKeyDown = (event) => {\n      // Send message if Enter key is pressed\n      if (event.keyCode === 13) {\n        handleSendMessage();\n      }\n    };\n\n  return (\n    <div id=\"chat-bot\">\n      <div id=\"chat-icon\" onClick={toggleChat}>\n        <img src=\"img/chat_employee.png\" alt=\"Chat Icon\" />\n      </div>\n      {chatOpen && (\n        <div id=\"chat-window\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender === 'Bot' ? 'received' : 'sent'}`}>\n              <p>{message.message}</p>\n            </div>\n          ))}\n          <div id=\"chat-input-container\">\n            <input type=\"text\" id=\"chat-input\" placeholder=\"Ask a question...\" value={userInput} onChange={handleUserInput} onKeyDown={handleKeyDown} />\n            <button id=\"chat-send-button\" onClick={sendMessage}>Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IAAES,MAAM,EAAE,KAAK;IAAEC,OAAO,EAAE;EAA6B,CAAC,CACzD,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMa,uBAAuB,GAAGA,CAAA,KAAM;IACpCP,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EAED,MAAMS,eAAe,GAAIC,KAAK,IAAK;IACjCH,YAAY,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAV,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEE,MAAM,EAAE,KAAK;MAAEC,OAAO,EAAEC;IAAU,CAAC,CAAC,CAAC;IACjEC,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMO,aAAa,GAAIJ,KAAK,IAAK;IAC/B;IACA,IAAIA,KAAK,CAACK,OAAO,KAAK,EAAE,EAAE;MACxBF,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAEH,oBACEhB,OAAA;IAAKmB,EAAE,EAAC,UAAU;IAAAC,QAAA,gBAChBpB,OAAA;MAAKmB,EAAE,EAAC,WAAW;MAACE,OAAO,EAAEC,UAAW;MAAAF,QAAA,eACtCpB,OAAA;QAAKuB,GAAG,EAAC,uBAAuB;QAACC,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EACLC,QAAQ,iBACP7B,OAAA;MAAKmB,EAAE,EAAC,aAAa;MAAAC,QAAA,GAClBf,QAAQ,CAACyB,GAAG,CAAC,CAACtB,OAAO,EAAEuB,KAAK,kBAC3B/B,OAAA;QAAiBgC,SAAS,EAAG,WAAUxB,OAAO,CAACD,MAAM,KAAK,KAAK,GAAG,UAAU,GAAG,MAAO,EAAE;QAAAa,QAAA,eACtFpB,OAAA;UAAAoB,QAAA,EAAIZ,OAAO,CAACA;QAAO;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADhBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC,eACF5B,OAAA;QAAKmB,EAAE,EAAC,sBAAsB;QAAAC,QAAA,gBAC5BpB,OAAA;UAAOiC,IAAI,EAAC,MAAM;UAACd,EAAE,EAAC,YAAY;UAACe,WAAW,EAAC,mBAAmB;UAACnB,KAAK,EAAEN,SAAU;UAAC0B,QAAQ,EAAEvB,eAAgB;UAACwB,SAAS,EAAEnB;QAAc;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5I5B,OAAA;UAAQmB,EAAE,EAAC,kBAAkB;UAACE,OAAO,EAAEgB,WAAY;UAAAjB,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAhDuBD,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}