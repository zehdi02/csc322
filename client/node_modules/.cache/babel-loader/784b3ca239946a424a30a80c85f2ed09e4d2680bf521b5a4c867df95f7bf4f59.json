{"ast":null,"code":"import React from 'react';\nexport default function chat_script() {\n  // Chat icon click event handler\n  document.getElementById('chat-icon').addEventListener('click', function (event) {\n    var chatWindow = document.getElementById('chat-window');\n    if (chatWindow.style.display === 'block') {\n      chatWindow.style.display = 'none';\n    } else {\n      chatWindow.style.display = 'block';\n    }\n    event.stopPropagation(); // Prevent click events from propagating to parent elements\n  });\n\n  // Chat window click event handler\n  document.getElementById('chat-window').addEventListener('click', function (event) {\n    event.stopPropagation(); // Prevent click events from propagating to parent elements\n  });\n\n  // Document click event handler\n  document.addEventListener('click', function () {\n    document.getElementById('chat-window').style.display = 'none';\n  });\n\n  // Get chat input element and send button element\n  const chatInput = document.getElementById('chat-input');\n  const chatSendButton = document.getElementById('chat-send-button');\n\n  // Add click event listener to send button\n  chatSendButton.addEventListener('click', function () {\n    // Get user input from chat input box\n    const userInput = chatInput.value;\n\n    // Display user input in chat window\n    displayMessage('You', userInput);\n\n    // Clear chat input box\n    chatInput.value = '';\n  });\n  // Add keydown event listener to chat input\n  // When user presses \"Enter\" on their keyboard, message is sent\n  chatInput.addEventListener('keydown', function (event) {\n    if (event.keyCode === 13) {\n      // Check if Enter key was pressed\n      // Get user input from chat input box\n      const userInput = chatInput.value;\n\n      // Display user input in chat window\n      displayMessage('You', userInput);\n\n      // Clear chat input box\n      chatInput.value = '';\n    }\n  });\n\n  // Function to display messages in the chat window\n  function displayMessage(sender, message) {\n    const chatMessages = document.getElementById('chat-messages');\n\n    // Create a new message element\n    const messageElement = document.createElement('div');\n    messageElement.className = 'chat-message';\n    messageElement.textContent = `${sender}: ${message}`;\n\n    // Append the message element to the chat window\n    chatMessages.appendChild(messageElement);\n  }\n}","map":{"version":3,"names":["React","chat_script","document","getElementById","addEventListener","event","chatWindow","style","display","stopPropagation","chatInput","chatSendButton","userInput","value","displayMessage","keyCode","sender","message","chatMessages","messageElement","createElement","className","textContent","appendChild"],"sources":["/home/zed/repos/csc322/src/chat_script.js"],"sourcesContent":["import React from 'react'\n\nexport default function chat_script() {\n  // Chat icon click event handler\ndocument.getElementById('chat-icon').addEventListener('click', function(event) {\n    var chatWindow = document.getElementById('chat-window');\n    if (chatWindow.style.display === 'block') {\n        chatWindow.style.display = 'none';\n    } else {\n        chatWindow.style.display = 'block';\n    }\n    event.stopPropagation(); // Prevent click events from propagating to parent elements\n  });\n  \n  // Chat window click event handler\n  document.getElementById('chat-window').addEventListener('click', function(event) {\n    event.stopPropagation(); // Prevent click events from propagating to parent elements\n  });\n  \n  // Document click event handler\n  document.addEventListener('click', function() {\n    document.getElementById('chat-window').style.display = 'none';\n  });\n  \n  // Get chat input element and send button element\n  const chatInput = document.getElementById('chat-input');\n  const chatSendButton = document.getElementById('chat-send-button');\n  \n  // Add click event listener to send button\n  chatSendButton.addEventListener('click', function() {\n      // Get user input from chat input box\n      const userInput = chatInput.value;\n  \n      // Display user input in chat window\n      displayMessage('You', userInput);\n  \n      // Clear chat input box\n      chatInput.value = '';\n  });\n  // Add keydown event listener to chat input\n  // When user presses \"Enter\" on their keyboard, message is sent\n  chatInput.addEventListener('keydown', function(event) {\n    if (event.keyCode === 13) { // Check if Enter key was pressed\n        // Get user input from chat input box\n        const userInput = chatInput.value;\n  \n        // Display user input in chat window\n        displayMessage('You', userInput);\n  \n        // Clear chat input box\n        chatInput.value = '';\n    }\n  });\n  \n  // Function to display messages in the chat window\n  function displayMessage(sender, message) {\n      const chatMessages = document.getElementById('chat-messages');\n  \n      // Create a new message element\n      const messageElement = document.createElement('div');\n      messageElement.className = 'chat-message';\n      messageElement.textContent = `${sender}: ${message}`;\n  \n      // Append the message element to the chat window\n      chatMessages.appendChild(messageElement);\n  }\n  \n  \n  \n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,WAAWA,CAAA,EAAG;EACpC;EACFC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;IAC3E,IAAIC,UAAU,GAAGJ,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IACvD,IAAIG,UAAU,CAACC,KAAK,CAACC,OAAO,KAAK,OAAO,EAAE;MACtCF,UAAU,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACrC,CAAC,MAAM;MACHF,UAAU,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;IACtC;IACAH,KAAK,CAACI,eAAe,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC;;EAEF;EACAP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;IAC/EA,KAAK,CAACI,eAAe,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC;;EAEF;EACAP,QAAQ,CAACE,gBAAgB,CAAC,OAAO,EAAE,YAAW;IAC5CF,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACI,KAAK,CAACC,OAAO,GAAG,MAAM;EAC/D,CAAC,CAAC;;EAEF;EACA,MAAME,SAAS,GAAGR,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;EACvD,MAAMQ,cAAc,GAAGT,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;;EAElE;EACAQ,cAAc,CAACP,gBAAgB,CAAC,OAAO,EAAE,YAAW;IAChD;IACA,MAAMQ,SAAS,GAAGF,SAAS,CAACG,KAAK;;IAEjC;IACAC,cAAc,CAAC,KAAK,EAAEF,SAAS,CAAC;;IAEhC;IACAF,SAAS,CAACG,KAAK,GAAG,EAAE;EACxB,CAAC,CAAC;EACF;EACA;EACAH,SAAS,CAACN,gBAAgB,CAAC,SAAS,EAAE,UAASC,KAAK,EAAE;IACpD,IAAIA,KAAK,CAACU,OAAO,KAAK,EAAE,EAAE;MAAE;MACxB;MACA,MAAMH,SAAS,GAAGF,SAAS,CAACG,KAAK;;MAEjC;MACAC,cAAc,CAAC,KAAK,EAAEF,SAAS,CAAC;;MAEhC;MACAF,SAAS,CAACG,KAAK,GAAG,EAAE;IACxB;EACF,CAAC,CAAC;;EAEF;EACA,SAASC,cAAcA,CAACE,MAAM,EAAEC,OAAO,EAAE;IACrC,MAAMC,YAAY,GAAGhB,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;;IAE7D;IACA,MAAMgB,cAAc,GAAGjB,QAAQ,CAACkB,aAAa,CAAC,KAAK,CAAC;IACpDD,cAAc,CAACE,SAAS,GAAG,cAAc;IACzCF,cAAc,CAACG,WAAW,GAAI,GAAEN,MAAO,KAAIC,OAAQ,EAAC;;IAEpD;IACAC,YAAY,CAACK,WAAW,CAACJ,cAAc,CAAC;EAC5C;AAIF"},"metadata":{},"sourceType":"module","externalDependencies":[]}